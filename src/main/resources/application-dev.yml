server:
  port: 8081
  context-path: /springboot
# HTTP ENCODING
spring:
  datasource:
      name: datasource
      type: com.alibaba.druid.pool.DruidDataSource
      url: jdbc:mysql://106.14.205.154:3306/test?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
      username: root
      password: 364620
      driver-class-name: com.mysql.jdbc.Driver
      dbcp:
        min-idle: 1
        max-wait: 60000
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        validation-query: select 'x'
  redis:
  # Redis数据库索引（默认为0）
    database: 0
  # Redis服务器地址
#    host: 120.76.65.195
    host: 106.14.205.154
  # Redis服务器连接端口号
    port: 6379
  # Redis服务器连接密码（默认为空）
#    password: chinajune
    password: 3345633
  # Redis连接超时时间（毫秒）
    timeout: 100
    pool:
  # Redis连接池最大连接连接数（使用负数标示没有限制）
      max-active: 8
  # Redis连接池最大阻塞时间（使用负数标示没有限制）
      max-wait: -1
  # Redis连接池中的最大空闲连接
      max-idle: 8
  # Redis连接池中的最小空闲连接
      min-idle: 0
      #kafka
      # 指定kafka 代理地址，可以多个
  kafka:
      bootstrap-servers: 106.14.205.154:9092
      #106.14.205.154:9092,192.168.59.131:9092,192.168.59.132:9092
      # 指定默认消费者group id
      consumer:
        group-id: myGroup
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 指定默认topic id
      template:
        default-topic: my-replicated-topic
      # 指定listener 容器中的线程数，用于提高并发量
      listener:
        concurrency: 3
      # 每次批量发送消息的数量
      producer:
        batch-size: 1000
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer